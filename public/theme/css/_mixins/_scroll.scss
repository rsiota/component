/* Interpolates a property between two viewport percentages 

If no percentages are specified, the property will be interpolated
between 0% and 100%

@include scroll(font-size, 20px, 60px);
@include scroll(height, 200px, 1000px, 30, 50);
*/

@use "sass:list";
@use "sass:map";
@use "sass:math";

$listAnimations: ();

// Scroll bound animation based on viewport percentage of selector 
@mixin scroll($property, $top, $bottom, $topPercentage: "", $bottomPercentage: "") {
    
    $selector: str-replace(#{&}, '.', '');
    $bottomPercentagePrefix: 100;
    $topPercentagePrefix: 0;
    
    @if ($bottomPercentage != "") {
        $bottomPercentagePrefix: $bottomPercentage; 
    }
    
    @if ($topPercentage != "") {
        $topPercentagePrefix: $topPercentage; 
    }

    $keyframe: str-replace($selector, ' ', '_') + '-' + 
        $topPercentagePrefix + $bottomPercentagePrefix + 
        '--' + $property;
    
    $currentSelector: str-replace($selector, ' ', '_');
    
    $otherSelector: checkotherSelector($currentSelector);
    
    @if $otherSelector == true {
        $listAnimations: () !global;
    }
    $start: $topPercentagePrefix;
    $end: $bottomPercentagePrefix;

    @keyframes #{$keyframe} {

        0%,
        #{$start}% {
            #{$property}: $bottom;
        }
        
        #{$end}%,
        100% {
            #{$property}: $top;
        }
    }

    $listAnimations: list.append($listAnimations, $keyframe) !global;
    @include mergeAnimations($listAnimations...);
}
