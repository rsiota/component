/* While scrolling in view play scroll animation 

If no percentages are specified, the animation boundaries are
0% (when element starts entering into view) 
100% (when element is fully invisible)

If no class/selector is specified the trigger of the animation
is the selector where the mixin is defined

@include scroll(font-size, 20px, 60px);
@include scroll(height, 200px, 1000px, 30, 50);
@include scroll(height, 200px, 1000px, 30, 50, '.section');

*/

// Scroll bound animation based on viewport percentage of class specified
@mixin scroll($property, $top, $bottom, $topPercentage: "", $bottomPercentage: "", $class: "") {
    
    $selector: str-replace(#{&}, '.', '') !global;

    @if ($class != "") {
        $scrollSelector: str-replace($class, '.', '') !global;
    } @else {
        $scrollSelector: $selector !global;
    }

    $bottomPercentagePrefix: 100;
    $topPercentagePrefix: 0;
    
    @if ($bottomPercentage != "") {
        $bottomPercentagePrefix: $bottomPercentage; 
    }
    
    @if ($topPercentage != "") {
        $topPercentagePrefix: $topPercentage; 
    }

    $keyframe: str-replace($selector, ' ', '_') + '--' + 
        $property + '-' +
        $topPercentagePrefix + $bottomPercentagePrefix;

    $animation: "#{$keyframe} 1s linear 1 calc(-1s * var(--scroll-#{$scrollSelector}) / 100) both paused";
    
    $currentSelector: str-replace($selector, ' ', '_');
    
    $otherSelector: checkotherSelector($currentSelector);
    
    @if $otherSelector == true {
        $listAnimations: () !global;
    }
    $start: $topPercentagePrefix;
    $end: $bottomPercentagePrefix;

    @keyframes #{$keyframe} {

        0%,
        #{$start}% {
            #{$property}: $top;
        }
        
        #{$end}%,
        100% {
            #{$property}: $bottom;
        }
    }

    $listAnimations: append($listAnimations, $animation) !global;
    @include mergeAnimations($listAnimations...);
}
